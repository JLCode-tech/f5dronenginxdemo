---
kind: pipeline
name: startnotify

steps:
- name: startnotify
  image: plugins/slack
  settings:
    webhook:
      from_secret: SLACK_WEB_URL
    channel: infrastructure-as-code
    template: >
        Terraform {{build.link}} starting  

---
kind: pipeline
name: infrastructure

steps:
- name: Terraform
  #image: jarrodl/tfdevbox:main
  image: gcr.io/volterraio/volt-terraform:latest
  environment:
    terracloud:
      from_secret: terracloud
  commands:
    #- mkdir $HOME/.terraform.d/ && echo "$terracloud" > $HOME/.terraform.d/credentials.tfrc.json
    - echo "$terracloud" > $HOME/.terraform.d/credentials.tfrc.json
    - terraform -version
    # Set the Terraform and Terragrunt image versions
    #- export TERRAFORM_VERSION=0.15.3
    # Install Terraform
    - echo "----Installing Terraform----"
    - curl https://releases.hashicorp.com/terraform/0.15.3/terraform_0.15.3_linux_amd64.zip > terraform_linux_amd64.zip
    - rm /go/bin/terraform
    - unzip terraform_linux_amd64.zip -d /go/bin
    - rm -f terraform_linux_amd64.zip
    - rm -f terraform_SHA256SUMS
    - terraform -version
    #- terraform -v
    - terraform init
    - terraform validate
    #- terraform plan
    #- terraform apply -auto-approve
    - terraform destroy -auto-approve

---
kind: pipeline
name: endnotify

depends_on: [ infrastructure ]
  
trigger:
    status: [ success, failure ]

steps:
- name: endnotify
  image: plugins/slack
  settings:
    webhook:
      from_secret: SLACK_WEB_URL
    channel: infrastructure-as-code
    template: >
      {{#success build.status}}
        build {{build.number}} {{build.link}} Success. Infastructure Built and Finished - Nice One !
      {{else}}
        build {{build.number}} {{build.link}} Failed. Computer says No !
      {{/success}}
  when:
      status: [ success, failure ]